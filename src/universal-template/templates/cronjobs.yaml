{{- if .Values.applications }}
{{-   range .Values.applications }}
{{-     if .app }}
{{-       if eq .app.type "cronjob"}}
{{-         $configMap        := .configMap }}
{{-         $name             := .name }}
{{-         $namespace        := $.Release.Namespace }}
{{-         $fullName         := include "universal-template.fullName" (list $ . $name) }}
{{-         $extraLabels      := .app.extraLabels }}
{{-         $replicas         := .app.replicas }}
{{-         $podAnnotations   := .app.podAnnotations }}
{{-         $image            := .app.image }}
{{-         $ports            := .app.ports }}
{{-         $envs             := .app.envs }}
{{-         $resources        := .app.resources }}
{{-         $persistentVolume := .app.persistentVolume }}
{{-         $tolerations      := .app.tolerations }}
{{-         $affinity         := .app.affinity }}
{{          $nodeSelector     := .app.nodeSelector }}
{{-         $probes           := .app.probes }}
{{-         $commands         := .app.commands }}
{{-         $args             := .app.args }}
{{-         $cronJob          := .app.cronJob }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "universal-template.labels" $ | nindent 4 }}
    {{- include "universal-template.selectorLabels" (list $fullName) | nindent 4 }}
spec:
  schedule: {{ $cronJob.schedule }}
  failedJobsHistoryLimit: {{ default 0 $cronJob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ default 0 $cronJob.successfulJobsHistoryLimit }}
  concurrencyPolicy: {{ default "Forbid" $cronJob.concurrencyPolicy }} 
  jobTemplate:
    spec:
      parallelism: {{ default 1 $cronJob.parallelism }}
      completions: {{ default 1 $cronJob.completions }}
      backoffLimit: {{ default 3 $cronJob.backoffLimit }}
      activeDeadlineSeconds: {{ default 300 $cronJob.activeDeadlineSeconds }}
      ttlSecondsAfterFinished: {{ default 300 $cronJob.ttlSecondsAfterFinished }}
      template:
        spec:
          {{- if $affinity }}
          affinity:
          {{-   toYaml $affinity | nindent 10 }}
          {{- end }}
          {{- if $podAnnotations }}
          nodeSelector:
          {{-   toYaml $nodeSelector | nindent 10 }}
          {{- end }}
          {{- if $tolerations }}
          tolerations:
          {{-   toYaml $tolerations | nindent 10 }}
          {{- end }}
          containers:
          - name: {{ $fullName }}
            image: {{ $image.repository }}:{{ $image.tag }}
            imagePullPolicy: {{ default "IfNotPresent" $image.pullPolicy }}
            {{- if $resources }}
            resources: {{- toYaml $resources | nindent 14 }}
            {{- end }}
            {{- if $commands }}
            command:
            {{-   range $commands }}
              - {{ . | quote }}
            {{-   end }}
            {{- end }}
            {{- if $args }}
            args:
            {{-   range $args }}
              - {{ . | quote }}
            {{-   end }}
            {{- end }}
            {{- if $envs }}
            env:
            {{-   range $envs }}
              - name: {{ .name }}
            {{-     if .valueFrom }}
                valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{-     else }}
                value: {{ .value }}
            {{-     end }}
            {{-   end }}
            {{- end }}
          {{- if $configMap }}
            volumeMounts:
            - name: volume-configs
              mountPath: {{ $configMap.mountPath }}
              readOnly: true
          volumes:
          - name: volume-configs
            configMap:
              name: {{ $fullName }}
              items:
              {{-   range $configMap.items }}
              - key: {{ .name | lower }}
                path: {{ .name | lower }}
              {{-   end }}
          {{- end }}
          {{- if $image.pullSecrets }}
          imagePullSecrets:
          {{-   range $image.pullSecrets }}
            - name: {{ .name }}
          {{-   end }}
          {{- end }}
          restartPolicy: {{ default "Never" $cronJob.restartPolicy }}
...
{{-       end }}
{{-     end }}
{{-   end }}
{{- end }}
