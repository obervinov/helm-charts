{{- if .Values.applications                                                              }}
{{-   range .Values.applications                                                         }}
{{-     if .app                                                                          }}
{{-       if eq .app.type "deployment"                                                   }}
{{-         $configMap         := .configMap                                             }}
{{-         $service           := .service                                               }}
{{-         $name              := .name                                                  }}
{{-         $namespace         := $.Release.Namespace                                    }}
{{-         $fullName          := include "universal-template.fullName" (list $ . $name) }}
{{-         $app               := .app                                                   }}
{{-         $extraLabels       := $app.extraLabels                                       }}
{{-         $replicas          := $app.replicas                                          }}
{{-         $extraAnnotations  := $app.extraAnnotations                                  }}
{{-         $image             := $app.image                                             }}
{{-         $initContainers    := $app.initContainers                                    }}
{{-         $containers        := $app.containers                                        }}
{{-         $envs              := $app.envs                                              }}
{{-         $resources         := $app.resources                                         }}
{{-         $emptyDirVolume    := $app.emptyDirVolume                                    }}
{{-         $persistentVolume  := $app.persistentVolume                                  }}
{{-         $tolerations       := $app.tolerations                                       }}
{{-         $affinity          := $app.affinity                                          }}
{{          $nodeSelector      := $app.nodeSelector                                      }}
{{-         $probes            := $app.probes                                            }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "universal-template.labels" $ | nindent 4 }}
    {{- include "universal-template.selectorLabels" (list $fullName )  | nindent 4 }}
    {{- if $extraLabels }}
    {{-   toYaml $extraLabels | nindent 4 }}
    {{- end }}
spec:
  {{- if $replicas }}
  replicas: {{ $replicas }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "universal-template.selectorLabels" (list $fullName )  | nindent 6 }}
  template:
    metadata:
      {{- if $extraAnnotations }}
      annotations: {{- toYaml $extraAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "universal-template.labels" $ | nindent 8 }}
        {{- include "universal-template.selectorLabels" (list $fullName )  | nindent 8 }}
      {{- if $extraLabels }}
      {{-   toYaml $extraLabels | nindent 8 }}
      {{- end }}
    spec:
      {{- if $affinity }}
      affinity: {{- toYaml $affinity | nindent 8 }}
      {{- end }}
      {{- if $nodeSelector }}
      nodeSelector: {{- toYaml $nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $tolerations }}
      tolerations: {{- toYaml $tolerations | nindent 8 }}
      {{- end }}
      {{- if $initContainers }}
      initContainers:
      {{-   range $initContainers }}
      {{-     $initContainerData := dict "app" . "name" .name "configMap" $configMap "persistentVolume" $persistentVolume "emptyDirVolume" $emptyDirVolume }}
      {{- include "universal-template.container.template" $initContainerData | nindent 8 }}
      {{-   end }}
      {{- end }}
      containers:
      {{- range $containers }}
      {{- $containerData := dict "app" . "name" .name "configMap" $configMap "service" $service "persistentVolume" $persistentVolume "emptyDirVolume" $emptyDirVolume }}
      {{- include "universal-template.container.template" $containerData | nindent 8 }}
      {{- end }}
      {{- if or $configMap $persistentVolume $emptyDirVolume }}
      {{-   $volumesData := dict "targetType" "deployment" "fullName" $fullName "configMap" $configMap "persistentVolume" $persistentVolume "emptyDirVolume" $emptyDirVolume }}
      volumes: {{- include "universal-template.volumes.template" $volumesData | nindent 8 }}
      {{- end }}
      {{- if $image.pullSecrets }}
      imagePullSecrets:
      {{-   range $image.pullSecrets }}
      - name: {{ . }}
      {{-   end }}
      {{- end }}
...
{{-       end }}
{{-     end }}
{{-   end }}
{{- end }}
